find_package(cpp_cuda)
if(cpp_cuda_FOUND)
    set(backend_deps cpp_cuda::cpp_cuda)
    add_definitions(-DGPU_BACKEND_ENABLE=1)
endif()
find_package(mekil REQUIRED)
if(mekil_FOUND)
    set(backend_deps ${backend_deps} mekil::mekil)
    add_definitions(-DCPU_BACKEND_ENABLE=1)
endif()

file(GLOB tests ${CMAKE_CURRENT_LIST_DIR}/test_*.cpp)
foreach(test IN LISTS tests)
    get_filename_component(test_WLE ${test} NAME_WLE)
    add_executable(${test_WLE} ${test})
    target_link_libraries(${test_WLE} PUBLIC py_visualizer::py_visualizer ${backend_deps})

    set_target_properties(${test_WLE} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}) 
    copy_visualizer_files(${test_WLE} ${CMAKE_BINARY_DIR})

    set(test_WLE _${test_WLE})
    add_library(${test_WLE} SHARED ${test})
    target_link_libraries(${test_WLE} PUBLIC py_visualizer::py_visualizer  ${backend_deps})
    set_target_properties(${test_WLE} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}) 
endforeach()
